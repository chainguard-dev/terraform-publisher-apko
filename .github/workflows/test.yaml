name: Tests
on:
  pull_request_target: # To test cosign signing.
    branches: ['main']
  pull_request:
    branches: ['main']
  push:
    branches: ['main']

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      if: github.event_name == 'pull_request_target'
      with:
        ref: refs/pull/${{ github.event.pull_request.number }}/merge

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      if: github.event_name != 'pull_request_target'

    - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: '1.22'
        check-latest: true

    - uses: chainguard-dev/actions/setup-registry@7d40b853210d271a28ac2822827f965f6f1e78fa # main
      with:
        port: 5000

    - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
      with:
        terraform_version: '1.8.*'
        terraform_wrapper: false

    - working-directory: ./examples/static
      env:
        TF_VAR_target_repository: localhost:5000/static
        TF_VAR_verify: ${{github.event_name == 'pull_request_target'}}
      run: |
        terraform init -upgrade
        terraform apply -auto-approve

    # Test with archs and check_sbom=false
    - working-directory: ./examples/static
      env:
        TF_VAR_target_repository: localhost:5000/static
        TF_VAR_archs: '["x86_64"]'
        TF_VAR_check_sbom: 'false'
        TF_VAR_verify: ${{github.event_name == 'pull_request_target'}}
      run: |
        terraform init -upgrade
        terraform apply -auto-approve
